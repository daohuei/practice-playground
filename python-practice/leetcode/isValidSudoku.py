def isValidSudoku(board: list()) -> bool:
    row, col, block = {}, {}, {}
    for i in range(9):
        for j in range(9):
            num = board[i][j]
            if num != ".":
                if i not in row.keys():
                    row[i] = []
                if j not in col.keys():
                    col[j] = []
                if (i // 3, j // 3) not in block.keys():
                    block[i // 3, j // 3] = []
                if num in row[i] or num in col[j] or num in block[(i // 3, j // 3)]:
                    return False
                row[i].append(num)
                col[j].append(num)
                block[i // 3, j // 3].append(num)
    return True


valid_s = [
    ["5", "3", ".", ".", "7", ".", ".", ".", "."],
    ["6", ".", ".", "1", "9", "5", ".", ".", "."],
    [".", "9", "8", ".", ".", ".", ".", "6", "."],
    ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
    ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
    ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
    [".", "6", ".", ".", ".", ".", "2", "8", "."],
    [".", ".", ".", "4", "1", "9", ".", ".", "5"],
    [".", ".", ".", ".", "8", ".", ".", "7", "9"],
]
invalid_s = [
    ["8", "3", ".", ".", "7", ".", ".", ".", "."],
    ["6", ".", ".", "1", "9", "5", ".", ".", "."],
    [".", "9", "8", ".", ".", ".", ".", "6", "."],
    ["8", ".", ".", ".", "6", ".", ".", ".", "3"],
    ["4", ".", ".", "8", ".", "3", ".", ".", "1"],
    ["7", ".", ".", ".", "2", ".", ".", ".", "6"],
    [".", "6", ".", ".", ".", ".", "2", "8", "."],
    [".", ".", ".", "4", "1", "9", ".", ".", "5"],
    [".", ".", ".", ".", "8", ".", ".", "7", "9"],
]
print(isValidSudoku(valid_s))
print(isValidSudoku(invalid_s))
